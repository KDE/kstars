# This YAML recipe builds KStars with INDI support, then runs all tests
# It uses both KDE CI and custom image until tests are stabilised in the KDE CI image
# Build dependencies for the custom image are packaged into image definition 'docker/Dockerfile'

include:
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/linux.yml
      - /gitlab-templates/windows.yml
      - /gitlab-templates/android.yml
      # - /gitlab-templates/reuse-lint.yml
      # - /gitlab-templates/flatpak.yml

# Android CI is not ready yet
android_qt515:
  allow_failure: true

stages:
  - build
  - test
  #- test-unstable

# This is the custom build we use until tests are operational in the KDE CI image
.custom_build:
  interruptible: true
  image: tallfurryman/kstars-ci:0.12
  variables:
    CCACHE_BASEDIR: "$CI_PROJECT_DIR"
    QT_TEST_TIMEOUT_FUNCTION: "600"
    QT_QPA_PLATFORM: "eglfs"
    CCACHE_DIR: "$CI_PROJECT_DIR/.ccache"
  cache:
    key: "CCACHE-DB-$CI_PROJECT_ID"
    paths: [ "${CCACHE_DIR}" ]
    when: always
  before_script:
    - du -hs "${CCACHE_DIR}" || mkdir -p "${CCACHE_DIR}"
    - add-apt-repository --remove ppa:mutlaqja/indinightly
    - add-apt-repository ppa:mutlaqja/ppa
    - apt update
    - apt -y --no-install-recommends install libindi1 libindi-dev libindi-data indi-bin xplanet gsc phd2 libstellarsolver libstellarsolver-dev
    - mkdir -p kstars-build
  after_script:
    - ccache -s

# Run the build and keep the ccache folder as a fail-fast
build:
  stage: build
  extends: .custom_build
  only:
    - master
    - merge_requests
  script:
    - cd kstars-build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCCACHE_SUPPORT=ON -DBUILD_TESTING=OFF -DBUILD_DOC=OFF ..
    - ninja -j8 all install

# Run the full validation in one step, stable tests that must not fail
# The artifacts take far too much time to propagate from one step to the other
# The cache is unreliable, and only works on the same runner if there is no shared cache - use it for ccache instead
# Consolidate runner with build packages and build
build-and-test-stable:
  stage: test
  extends: .custom_build
  timeout: 3 hours
  only:
    - merge_requests
  variables:
    BUILD_TESTING: "ON"
  script:
    - cd kstars-build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCCACHE_SUPPORT=ON -DBUILD_TESTING=ON -DBUILD_DOC=ON ..
    - ninja -j8 all install
    - rm -rf Testing
    - mkdir -p /var/run/dbus
    - dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address
    - dbus-send --system --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
    - apt install -y --no-install-recommends dbus-x11
    - export $(dbus-launch)
    - dbus-send --session --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
    - xvfb-run ctest -T test -L stable -LE unstable --output-on-failure
  after_script:
    - pwd
    - saxon-xslt -u $(find . -name Test.xml) https://raw.githubusercontent.com/rpavlik/jenkins-ctest-plugin/master/ctest-to-junit.xsl > ./junit_result.stable.xml
    - ccache -s
  artifacts:
    reports:
      junit:
        ./junit_result.stable.xml

# Run the full validation in one step, unstable tests still in development
# build-and-test-unstable:
#   stage: test-unstable
#   interruptible: true
#   allow_failure: true
#   only:
#     - merge_requests
#   variables:
#     BUILD_TESTING: "ON"
#   before_script:
#     - *build_recipe
#   script:
#     - rm -rf Testing
#     - mkdir -p /var/run/dbus
#     - dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address
#     - dbus-send --system --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
#     - apt install -y --no-install-recommends dbus-x11
#     - export $(dbus-launch)
#     - dbus-send --session --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
#     - xvfb-run ctest -T test -LE stable --output-on-failure --no-compress-output
#   after_script:
#     - pwd
#     - saxon-xslt -u $(find . -name Test.xml) https://raw.githubusercontent.com/rpavlik/jenkins-ctest-plugin/master/ctest-to-junit.xsl > ./junit_result.unstable.xml
#     - ccache -s
#   artifacts:
#     reports:
#       junit:
#         ./junit_result.unstable.xml
#
# build-appimage:
#   stage: test
#   interruptible: true
#   allow_failure: true
#   only:
#     - merge_requests
#   before_script:
#     - python3 -m pip install appimage-builder
#     - wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /opt/appimagetool
#     - chmod +x /opt/appimagetool
#     - pushd /opt/; /opt/appimagetool --appimage-extract
#     - mv /opt/squashfs-root /opt/appimagetool.AppDir
#     - ln -s /opt/appimagetool.AppDir/AppRun /usr/local/bin/appimagetool
#     - popd
#   script:
#     - *build_recipe
#     - appimage-builder --recipe ../appimage/appimage-builder.yml --skip-test
#   artifacts:
#     expire_in: 1 week
#     paths:
#       - 'kstars-build/*.AppImage*'
#
