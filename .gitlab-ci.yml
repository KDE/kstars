# This YAML recipe builds KStars with INDI support, then runs all tests
# It uses both KDE CI and custom image until tests are stabilised in the KDE CI image
# Build dependencies for the custom image are packaged into image definition 'docker/Dockerfile'

stages:
  - build
  - test
  #- test-unstable
  - validate
  - deploy
  - publish

include:
  - local: '.gitlab-ci/common_rules.yml'
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/linux.yml
      - /gitlab-templates/linux-qt6.yml
      - /gitlab-templates/windows-qt6.yml
      - /gitlab-templates/flatpak.yml
      - /gitlab-templates/craft-windows-x86-64-qt6.yml
      - /gitlab-templates/craft-windows-appx-qt6.yml
      - /gitlab-templates/craft-macos-x86-64-qt6.yml
      - /gitlab-templates/craft-macos-arm64-qt6.yml

# Jobs

# Android CI is not ready yet
# android_qt515:
#   rules:
#     - when: manual
#       allow_failure: true

# Standard build recipes
   
.standard-build-recipes:
  rules:
    - !reference [.optional-on-forked-repository, rules]
    - !reference [.optional-on-draft-merge-requests, rules]
    - !reference [.always-on-scheduled-pipeline, rules]
    - !reference [.always-on-master-branch, rules]
    - !reference [.always-on-merge-requests, rules]
    - !reference [.manual-skipped-recipe, rules]

suse_tumbleweed_qt69:
  rules:
    - !reference [.standard-build-recipes, rules]

windows_qt68:
  allow_failure: true # TODO: REMOVE WHEN STELLARSOLVER QT6 IS INCLUDED IN CI IMAGE
  rules:
    - !reference [.standard-build-recipes, rules]

suse_tumbleweed_qt515:
  allow_failure: true # TODO: REMOVE WHEN STELLARSOLVER QT5 IS INCLUDED IN CI IMAGE
  rules:
    - !reference [.standard-build-recipes, rules]

json-validation:
  allow_failure: true
  rules:
    - !reference [.standard-build-recipes, rules]

flatpak:
  allow_failure: true # TODO: REMOVE WHEN STABLE AGAIN
  rules:
    - !reference [.standard-build-recipes, rules]
  needs:
    - suse_tumbleweed_qt69

# Craft recipes

.craft-recipes:
  rules:
    - !reference [.optional-on-forked-repository, rules]
    - !reference [.optional-on-draft-merge-requests, rules]
    - !reference [.always-on-scheduled-pipeline, rules]
    - !reference [.always-on-master-branch, rules]
    - !reference [.always-on-stable-release, rules]
    - !reference [.manual-skipped-recipe, rules]

craft_windows_qt6_x86_64: # Extended from /gitlab-templates/craft-windows-x86-64-qt6.yml
  needs:
    - windows_qt68
  rules:
    - !reference [.craft-recipes, rules]

craft_macos_qt6_x86_64: # Extended from /gitlab-templates/craft-macos-x86-64-qt6.yml
  timeout: 2h # Signing procedure often exceeds the default 1h
  needs:
    - suse_tumbleweed_qt69 # we don't have a macos check build
  rules:
    - !reference [.craft-recipes, rules]

craft_macos_qt6_arm64: # Extended from /gitlab-templates/craft-macos-arm64-qt6.yml
  timeout: 2h # Signing procedure often exceeds the default 1h
  needs:
    - suse_tumbleweed_qt69 # we don't have a macos check build
  rules:
    - !reference [.craft-recipes, rules]

# Publishing recipes

.publishing-recipes:
  rules:
    - !reference [.always-on-stable-release, rules]
    - when: never

# TODO Update to microsoftpublish for Qt6
# microsoftstore_qt515:
#   needs:
#     - craft_windows_qt515_x86_64
#   rules:
#     - !reference [.publishing-recipes, rules]

# Custom build recipes - until tests are operational in the KDE CI image

.custom-build-recipes:
  rules:
    - !reference [.optional-on-forked-repository, rules]
    - !reference [.optional-on-draft-merge-requests, rules]
    - !reference [.always-on-merge-requests, rules]
    - !reference [.manual-skipped-recipe, rules]

.custom_build:
  interruptible: true
  image: tallfurryman/kstars-ci:0.15-qt6
  variables:
    CCACHE_BASEDIR: "$CI_PROJECT_DIR"
    QT_TEST_TIMEOUT_FUNCTION: "600"
    QT_QPA_PLATFORM: "eglfs"
    CCACHE_DIR: "$CI_PROJECT_DIR/.ccache"
    STELLARSOLVER_TAG: "2.7"
  cache:
    key: "CCACHE-DB-$CI_PROJECT_ID"
    paths: [ "${CCACHE_DIR}" ]
    when: always
  rules:
    - !reference [.custom-build-recipes, rules]
  before_script:
    - du -hs "${CCACHE_DIR}" || mkdir -p "${CCACHE_DIR}"
    - add-apt-repository --remove ppa:mutlaqja/ppa
    - add-apt-repository ppa:mutlaqja/ppa
    - apt update
    - apt -y --no-install-recommends install libindi1 libindi-dev libindi-data indi-bin xplanet gsc phd2 libcurl4-openssl-dev git
    - git clone --branch=$STELLARSOLVER_TAG https://github.com/rlancaste/stellarsolver.git
    - mkdir stellarsolver-build && cd stellarsolver-build
    - cmake -GNinja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_QT5=OFF ../stellarsolver && ninja -j8 all install
    - cd ../ && mkdir -p kstars-build
  after_script:
    - ccache -s

# Run the build and keep the ccache folder as a fail-fast
build:
  stage: build
  extends: .custom_build
  needs:
    - suse_tumbleweed_qt69
  script:
    - cd kstars-build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCCACHE_SUPPORT=ON -DBUILD_TESTING=OFF -DBUILD_DOC=OFF -DBUILD_QT5=OFF ..
    - ninja -j8 all install

# Run the full validation in one step, stable tests that must not fail
# The artifacts take far too much time to propagate from one step to the other
# The cache is unreliable, and only works on the same runner if there is no shared cache - use it for ccache instead
# Consolidate runner with build packages and build
build-and-test-stable:
  stage: test
  extends: .custom_build
  allow_failure: true # TODO: REMOVE WHEN STABLE AGAIN
  needs:
    - build
  timeout: 3 hours
  variables:
    BUILD_TESTING: "ON"
  script:
    - cd kstars-build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCCACHE_SUPPORT=ON -DBUILD_TESTING=ON -DBUILD_QT5=OFF ..
    - ninja -j8 all install
    - rm -rf Testing
    - mkdir -p /var/run/dbus
    - dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address
    - dbus-send --system --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
    - apt install -y --no-install-recommends dbus-x11
    - export $(dbus-launch)
    - dbus-send --session --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
    - xvfb-run ctest -T test -L stable -LE unstable --output-on-failure
  after_script:
    - pwd
    - saxon-xslt -u $(find . -name Test.xml) https://raw.githubusercontent.com/rpavlik/jenkins-ctest-plugin/master/ctest-to-junit.xsl > ./junit_result.stable.xml
    - ccache -s
  artifacts:
    reports:
      junit:
        ./junit_result.stable.xml
