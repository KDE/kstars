<sect1 id="tool-scriptbuilder">
<title
>Редактор сценариев</title>
<indexterm
><primary
>Инструменты</primary>
<secondary
>Редактор сценариев</secondary>
</indexterm>

<para
>Приложения KDE могут управляться из других приложений, из командной строки, или с помощью <abbrev
>DBus</abbrev
>. &kstars; предоставляет набор расширений, позволяющих лучше контролировать изображение с помощью сценариев. Эти возможности позволяют, например, создавать демонстрации иллюстрирующие основные концепции астрономии. </para>
<para
>Написание DBus-скриптов вс`-таки является программированием, что может отпугнуть тех, у кого нет опыта программирования. Редактор сценариев предоставляет графический интерфейс (<abbrev
>GUI</abbrev
>) для конструирования DBus-сценариев &kstars;, что сильно упрощает написание сценариев. </para>

<sect2 id="sb-intro">
<title
>Введение в редактор сценариев</title>

<para
>Перед тем как подробно описывать как пользоваться редактором сценариев, прочтите небольшое вступление обо всех компонентах графического интерфейса. Для более подробной информации воспользуйтесь функцией "справка". </para>

<screenshot>
<screeninfo
>Редактор сценариев </screeninfo>
<mediaobject>
  <imageobject>
    <imagedata fileref="scriptbuilder.png" format="PNG"/>
  </imageobject>
  <textobject>
    <phrase
>Редактор сценариев</phrase>
  </textobject>
</mediaobject>
</screenshot>

<para
>На рисунке ниже представлен редактор сценариев. Панель слева -- <firstterm
>Текущий скрипт</firstterm
>;там показаны команды, которые вы уже включили в сценарий. Панель справа -- <firstterm
>Браузер функции</firstterm
>; там показан список всех доступных функций. Ниже браузера функций расположена небольшая панель, в которой содержится краткое описание функции выбранной в браузере. Панель ниже текущего скрипта -- <firstterm
>Аргументы функций</firstterm
>; где вы можете изменить аргументы функции выделенной в текущем скрипте. </para
><para
>Вверху расположен ряд кнопок, которые оперируют со сценарием как с целым: это (слева на право) <guibutton
>Создать скрипт</guibutton
>, <guibutton
>Открыть скрипт</guibutton
>, <guibutton
>Сохранить скрипт</guibutton
>, <guibutton
>Сохранить скрипт как...</guibutton
>, и <guibutton
>Тестировать скрипт</guibutton
>. Значение этих кнопок очевидны, за исключением, может быть, последней. Нажав на кнопку <guibutton
>Тестировать скрипт</guibutton
> вы запустите его в главном окне &kstars;. Отодвиньте окно Редактора сценариев в сторону, перед тем как нажимать эту кнопку, чтобы увидеть результат выполнения сценария. </para
><para
>В центре окна расположены кнопки, которые работают с отдельными функциями сценария. Это (сверху вниз): <guibutton
>Добавить функцию</guibutton
>, <guibutton
>Удалить функцию</guibutton
>, <guibutton
>Копировать функцию</guibutton
>, <guibutton
>Выше</guibutton
>, и <guibutton
>Ниже</guibutton
>. <guibutton
>Добавить функцию</guibutton
> -- добавляет выделенную в браузере функцию в текущий сценарий (вы также можете добавить функцию дважды щёлкнув на её названии мышью). Остальные кнопки оперируют с функциями выделенными в текущем сценарии, т.е. позволяют удалять их, копировать, изменять их положение. </para>
</sect2>

<sect2 id="sb-using">
<title
>Использование Редактора сценариев</title>
<para
>В качестве иллюстрации использования редактора сценариев, мы приведём небольшой пример, где сделаем скрипт, который покажет след Луны, пока часы симуляции идут в ускоренном режиме. </para
><para
>Прежде чем нарисовать след Луны, нужно привязать к ней экран. Для этого используем функцию <firstterm
>lookToward</firstterm
>. выделите эту функцию в списке справа, и обратите внимание, что описание этой функции появилось в панели ниже. Нажмите кнопку <guibutton
>Добавить функцию</guibutton
> , чтобы добавить функцию к текущему сценарию. Теперь в панели Аргументы функций появился выпадающий список <quote
>направление</quote
>, где вы можете выбрать направление, на которое будет привязан экран. В выпадающем списке содержаться только направления света, но нет объектов, таких как, например, Луна. Вы можете ввести имя объекта (<quote
>Луна</quote
>) в выпадающий список вручную, или воспользоваться окном <guilabel
>Поиск объекта</guilabel
> нажав кнопку <guibutton
>Объект</guibutton
>. Заметьте, если вы привязали экран к объекту, то автоматически начинается слежение за объектом, таким образом нет необходимости добавлять функцию <firstterm
>setTracking</firstterm
> перед lookToward. </para
><para
>Итак, теперь экран центрирован на Луну, следующим шагом мы хотим ускорить время. Для этого используйте функцию <firstterm
>setClockScale</firstterm
>. Добавьте её в сценарий, одним из описанных выше методов. После этого на панели Аргументы функций появиться окошечко счётчика, с помощью которого вы можете установить требуемую скорость течения времени симуляции. Установите скорость на 3 часа. </para
><para
>Итак, мы привязали экран к Луне и ускорили время. теперь мы просто хотим приостановить исполнение сценария. Добавьте функцию <firstterm
>waitFor</firstterm
> и установите паузу на 20с., используя панель Аргументов функций. </para
><para
>В завершение, установим скорость течения времени 1с. Добавьте ещё один экземпляр setClockScale, и установите значение аргумента - 1с. </para
><para
>Однако, в приведённом сценарии есть один недостаток. Мы должны сперва убедиться, что для отрисовки используются Экваториальные координаты, прежде чем начнём следить за Луной. Если используются Горизонтальные координаты, то на экране вы увидите очень быстрое вращение небесной сферы. Чтобы этого не произошло, установите параметр вида <firstterm
>UseAltAz</firstterm
> в <quote
>false</quote
>. Чтобы изменить какой-либо параметр вида, используйте функцию <firstterm
>changeViewOption</firstterm
>. Добавьте эту функцию к сценарию, и обратите внимание на панель аргументов функций. Здесь есть выпадающий список, содержащий все параметры вида. Так как мы точно знаем название опции, то мы можем просто выбрать её из списка. Если вы не знаете название необходимой опции, нажмите на кнопку <guibutton
>Просмотреть дерево</guibutton
>, чтобы открыть окно, которое показывает опции по разделам. Кроме того, рядом с каждой опцией содержится краткое описание, за что она отвечает, и тип аргументов и их предельные значения. Так опцию UseAltAz мы найдём в разделе <guilabel
>Настройка звёздного неба</guilabel
>. Выберите опцию и нажмите кнопку <guibutton
>OK</guibutton
>, после этого опция будет выбрана в выпадающем списке в панели аргументов функций. Наконец в поле Значение, наберите <quote
>false</quote
> или <quote
>0</quote
>. </para
><para
>Ещё один шаг: изменение опции UseAltAz в конце сценария не принесёт желаемого результат; мы должны изменить эту опцию в начале сценария. Для этого убедитесь что выделена нужная функция в панели текущий скрипт, и нажимайте кнопку <guibutton
>Выше</guibutton
>, до тех пор, пока функция не окажется вверху. </para
><para
>Теперь, когда сценарий написан, нужно сохранить его на диск. Для этого нажмите кнопку <guibutton
>Сохранить скрипт</guibutton
>. Сперва откроется окно, где вам предложат ввести название сценария и ваше имя, как имя автора. Для примера, в качестве названия сценария введите <quote
>Слежение за луной</quote
>, и своё имя в поле автор, и нажмите <guibutton
>OK</guibutton
>. После этого откроется стандартный диалог &kde; Сохранить файл. Введите название файла, и нажмите <guibutton
>OK</guibutton
>, чтобы сохранить сценарий. Заметьте, что если имя файла НЕ оканчивается <quote
>.kstars</quote
>, то этот суффикс будет добавлен автоматически. Если вы чувствуете себя опытным пользователем, вы можете отредактировать сценарий вручную, с помощью любого текстового редактора. </para
><para
>Готовый сценарий, можно запустить множеством способов. Из командной строки можно запустить только если &kstars; уже запущен. Также вы можете запустить сценарий из &kstars; с помощью пункта <guimenuitem
>Запустить сценарий</guimenuitem
>, меню <guimenuitem
>Файл</guimenuitem
>. </para>
</sect2>
</sect1>

