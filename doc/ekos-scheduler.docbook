<sect2 id="ekos-scheduler">
    <title>Scheduler</title>
    <indexterm>
        <primary>Tools</primary>
        <secondary>Ekos</secondary>
        <tertiary>Scheduler</tertiary>
    </indexterm>
    <screenshot>
        <screeninfo>
            Ekos Scheduler Module
        </screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="ekos_scheduler.png" format="PNG"/>
            </imageobject>
            <textobject>
                <phrase>Ekos Scheduler Module</phrase>
            </textobject>
        </mediaobject>
    </screenshot>
    <sect3 id="ekos-scheduler-introduction">
      <title>Introduction</title>
        <para>
          The Ekos Scheduler is an important component of your imaging workflow. It connects to INDI, starts and stops all the other Ekos modules, schedules jobs according to their constraints and priorities, monitors those jobs as they execute, and then safely brings down the system when jobs are done, or before dawn. Whether you are running multi-day imaging sessions for multiple targets, or simply trying to image a single target for a few hours, it is advisable to have the Scheduler control your imaging sessions.
        </para>
    </sect3>
    <sect3 id="scheduler-table">
        <title>Scheduler Table</title>
        <para>
          The heart of the Scheduler is a table displaying the list of Scheduler jobs the user wants to run. Associated with each jobs are attributes (mostly described in the settings section below). The attributes describe the name of the job, where the telescope should be pointed when imaging that job, a description of what types of images should be captured, constraints about when the jobs should run (&eg; altitude, twilight, moon, landscape blockages, &etc;), things that need to be done before and after the job is run, and strategies for dealing with errors.
        </para>
        <para>
          You can add, delete, modify or change the order of rows in the Scheduler table. 
        </para>
        <itemizedlist>
            <listitem>
              <para>
                You can add a Scheduler job row into the table by clicking the <guilabel>+</guilabel> control above the table, if all required attributes are filled out (name, position, and sequence file).
                </para>
            </listitem>
            <listitem>
              <para>
                If you click on a row, you can then click the <guilabel>-</guilabel> control above the table to delete that row.
              </para>
            </listitem>

            <listitem>
              <para>
                If you click on a row, you can then click the <guilabel>^</guilabel> or <guilabel>v</guilabel> controls to move those rows up or down in the job list.
              </para>
            </listitem>

            <listitem>
              <para>
                If you double click on a row, the attributes of that job are filled in to the various settings on the Scheduler page. You can then change one or more of those attributes, and then click the checkmark above the table (after your double-click, the <guilabel>+</guilabel> became a <guilabel>checkmark</guilabel>), and the new attributes are assigned to that job.
              </para>
            </listitem>
        </itemizedlist>

    </sect3>
    <sect3 id="scheduling-algorithm">
        <title>Scheduling Algorithm</title>
        <para>
          The Scheduler table (above) lists jobs in order of priority, with higher jobs (on lower-numbered rows) having higher priority than jobs further down the list (with higher-numbered rows). 
        </para>
        <para>
          The Scheduler regularly plans (and re-plans) which jobs should be run, and when. It can start executing a given job, and then later preempt that job for a new one. It can become idle if no jobs can be run (&eg; in daylight), and sleep until such a time that it becomes active again. Its aim is to keep the equipment as busy as possible, while respecting the scheduler-table's priorities. Here's how it works.
        </para>
        <para>
          When the scheduler starts (or when it replans, which it does every second while active), it looks through the entire list of jobs, starting at the highest priority job, and working its way down to the lowest priority one if necessary. When it finds a job that can run, it starts that job, possibly preempting the currently running job. A jobs can run if its constraints are met, &eg; the target is not blocked by the local terrain, it meets the minimum altitude constraint, it has not already completed all the desired imaging, ...
        </para>
    <para>
      The algorithm shows its projected next start times and stop times for all job in the Scheduler table. It also shows its estimate of times jobs will run during the next 48 hours in the log panel at the bottom of the window. See the screenshot of the scheduler window at the top of this section.
        </para>
        <para>
          The scheduling algorithm described in the above paragraph is known as the Greedy Scheduling algorithm. It is the recommended one to use. In previous versions of Ekos, there was another "Classic scheduling algorithm" which is no longer in Ekos. That scheme could not preempt running jobs, and thus did not make as much use of the equipment as the Greedy Algorithm. 
        </para>
        <para>
          There is a checkbox option in the scheduler options menu called <guilabel>Use greedy scheduling</guilabel> which defaults to being checked.  The system works as described above when it is checked. When it is unchecked the scheduler is prevented from scheduling lower priority jobs when uncompleted higher priority jobs cannot run. This results in less efficient use of the system, but may give you more control over scheduling.
        </para>
    </sect3>
    <sect3 id="scheduler-files">
        <title>Scheduler Files (.esq)</title>
        <para>
          The scheduler table with its list of jobs and attributes can be saved onto disk and read back in. It writes an .esq file. Controls for writing the current Scheduler table to disk, and reading back other .esq files are located above the table to the right.
        </para>
    </sect3>
    <sect3 id="ekos-scheduler-settings">
      <title>Settings</title>
        <para>
            Ekos Scheduler provides a simple interface to aid the user in setting the conditions and constraints required for an Scheduler job. You must select the <guilabel>Target</guilabel>, its coordinates, and the <guilabel>Sequence</guilabel> before you can add a job to the Scheduler.
        </para>
        <para>
            Each Scheduler job is composed of the following:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    <guilabel>Target name and coordinates</guilabel>: Select target from the <link linkend="findobjects">Find Dialog</link> or <guibutton>Add</guibutton> it from <link linkend="tool-obsplanner">Observation Planner</link>. You can also enter a custom name. Coordinates can also be copied from the SkyMap using the button just to the right of the coordinates.
                </para>
            </listitem>
            <listitem>
                <para>
                    Optional <guilabel>PA</guilabel>: The position angle (or image rotation) can be specified for systems with camera rotation hardware.
                </para>
            </listitem>
            <listitem>
                <para>
                    Optional <guilabel>FITS File</guilabel>: If a FITS file is specified, the astrometry solver solves the file and use the central RA/DEC as the target coordinates.
                </para>
            </listitem>
            <listitem>
                <para>
                    <guilabel>Sequence</guilabel> file: The sequence file is constructed in the Ekos <link linkend="ekos-capture">Capture Module</link>. It has a list of capture specifications, where each spec details the number of images to capture, which filter to use, the exposure length, the gain, file naming details, temperature settings, prefixes, download directory, &etc;
                </para>
            </listitem>
            <listitem>
                <para>
                    <guilabel>Profile</guilabel>: Select which equipment profile to utilize when starting Ekos. If Ekos &amp; INDI are already started and online, this selection is ignored.
                </para>
            </listitem>
            <listitem>
                <para>
                    <guilabel>Steps</guilabel>: The user selects what steps should be taken at the start of the job. The possibilities are: (1) Start mount tracking, (2) autofocus, (3) run a plate solving alignment, (4) start the auto-guider. One or more can be chosen.
                </para>
            </listitem>
            <listitem>
                <para>
                    <guilabel>Startup Conditions</guilabel>: Conditions that must be met <emphasis role="bold">before</emphasis> the Scheduler job is started. Currently, the user may select to start as soon as possible, <guimenuitem>ASAP</guimenuitem>, or when the target is near or past culmination, or at a specific time.
                </para>
            </listitem>
            <listitem>
                <para>
                    <guilabel>Constraints</guilabel>: These are conditions that must be met <emphasis role="bold">at all times</emphasis> during the Scheduler job execution process. These include minimum target altitude, minimum moon separation, twilight observation, artificial horizon altitude constraints, and weather monitoring.
                </para>
            </listitem>
            <listitem>
                <para>
                    <guilabel>Completion Conditions</guilabel>: Conditions that trigger completion of the Scheduler job. The default selection is to simply mark the Scheduler job as complete once the sequence process is complete. Additional conditions enable the user to repeat the sequence process a number of times or indefinitely, or up until a specific time.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>
    <sect3 id="other-options">
        <title>Other options</title>
        <para>
          There are several other options to control how the Scheduler behaves. These are found in the general KStars Settings menu, shown below, in its Ekos tab and Scheduler sub-tab.
        </para>
      <screenshot>
            <screeninfo>
                Scheduler Settings
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="ekos_scheduler_settings.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Scheduler Settings</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
       <sect4 id="remember-job-progress">
        <title>Remember job progress</title>
        <para>
          Among the settings shown above, one important one is known as <guilabel>Remember job progress</guilabel>.  When this box is checked and a job is running, the Scheduler looks at the job's images already captured on disk, and doesn't re-capture the ones that are already there.  The benefit is that if a job is restarted, or re-run another night, or if multiple jobs are being run together, stopping and starting when they are runnable, then jobs re-start right where they left off. This works well with the <guilabel>Repeat until terminated</guilabel> job-completion option. If <guilabel>Remember job progress</guilabel> is unchecked, jobs would restart from the start of their sequence specification each time, which probably isn't what you want.  Unfortunately, if the images are not stored on the same computer that Ekos is running on, then this feature doesn't work and the jobs restart from their beginning.
        </para>
        <para>
A possibly confusing side-effect of <guilabel>Remember job progress</guilabel> is that if you've run a job using the (default) Sequence Completion finish condition, and it has captured all its images, and now you want to run the job again, the Scheduler won't schedule the job because it believes that all the images have already been captured. You'd either need to move those images elsewhere on disk, or change the finish condition to Repeat for N Times, or Repeat Until Terminated.
        </para>
       </sect4>
       <sect4 id="group-repeats">
        <title>Group repeats</title>
        <para>
          This feature allows you to run two or more scheduler jobs at roughly the same priority, such that if they were both runnable, they would progress at roughly the same rate.  This may be applicable, for example, to jobs imaging the multiple tiles in a mosaic, but is generally applicable to any set of jobs.
        </para>
        <para>
          Normally the (Greedy) scheduler's job priority is set by the row the job is listed in the Scheduler's job table. Jobs on rows closer to the top run with higher priority than jobs lower down. Thus, if a job on row 2 (Job2) uses <guilabel>Repeat Until Terminated</guilabel>, and that job's running constraints are satisfied, a lower down job (&eg; Job3) will not be scheduled to run.
        </para>
        <para>If you wish to alternate jobs, you can assign each of the jobs the same <guilabel>group</guilabel> name, and give the jobs one of the repeating finish conditions (&eg; Repeat for N times, or Repeat Until Terminated). With that setup, jobs in the same group will cede to each other if they have completed more 'Repeat Iterations' than the other job. So, if Job2 with group "MyGroup" completes its 2nd iteration, and Job3 with the same group name has only completed 0 or 1 iterations, when the time comes to schedule Job2, Job3 will run instead.
        </para>
        <para>
Practically speaking, imagine you had a 6-panel mosaic you wanted to alternate.  You might give all of those jobs the same group name, make them all &eg; "Repeat for 5 times". Then, they would run in lock-step. The cadence of job switching would be controlled by the length of the sequence file assigned to each of those jobs. You wouldn't want to make the cadence too short (&eg; capturing one 2-minute image), as there is overhead in switching jobs. For instance, starting jobs may involved aligning, starting guiding, and even focusing.          
        </para>
       </sect4>
       <sect4 id="repeat-all-jobs">
        <title>Repeat all jobs</title>
        <para>
There is a checkbox and number input right below the Scheduler jobs table that allows you to repeat the entire schedule N times.  This can be used to alternate a few jobs. You can just list the jobs on the scheduler, set it to repeat N times, and the jobs will repeat. However, this change is incompatible with 'Remember job progress (above) and unavailable if Remember Job Progress is checked. (Note: Remember Job Progress is recommended.)
        </para>
       </sect4>
    </sect3>
    <sect3 id="workflow">
        <title>Workflow</title>

      <screenshot>
            <screeninfo>
                Scheduler + Planner
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="scheduler_planner.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Scheduler + Planner</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
        <para>
            The description above only tackles the <emphasis role="bold">Data Acquisition</emphasis> stage of the observatory workflow. The overall procedure typically utilized in an observatory can be summarized in three primary stages:
        </para>
        <orderedlist>
            <listitem>
                <para>
                    Startup
                </para>
            </listitem>
            <listitem>
                <para>
                    Data Acquisition (including preprocessing and storage)
                </para>
            </listitem>
            <listitem>
                <para>
                    Shutdown
                </para>
            </listitem>
        </orderedlist>
    </sect3>

    <sect3 id="ekos-scheduler-startup-procedure">
        <title>Startup Procedure</title>
        <para>
            Startup procedure is unique to each observatory but may include:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    Turning on power to equipment
                </para>
            </listitem>
            <listitem>
                <para>
                    Running safety/sanity checks
                </para>
            </listitem>
            <listitem>
                <para>
                    Checking weather conditions
                </para>
            </listitem>
            <listitem>
                <para>
                    Turning off light
                </para>
            </listitem>
            <listitem>
                <para>
                    Fan/Light control
                </para>
            </listitem>
            <listitem>
                <para>
                    Unparking dome
                </para>
            </listitem>
            <listitem>
                <para>
                    Unparking mount
                </para>
            </listitem>
            <listitem>
                <para>
                    &etc;
                </para>
            </listitem>
        </itemizedlist>
        <para>
            Ekos Scheduler only initiates the startup procedure once the startup time for the first Scheduler job is close (default <emphasis>lead</emphasis> time is 5 minutes before <emphasis>startup</emphasis> time). Once the startup procedure is completed successfully, the scheduler picks the Scheduler job target and starts the sequence process. If a startup script is specified, it shall be executed first.
        </para>
    </sect3>

    <sect3 id="ekos-scheduler-data-acquisition">
        <title>Data Acquisition</title>
        <para>
            Depending the on the user selection, the typical workflow proceeds as follows:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    Slew mount to target. If a FITS file was specified, it first solves the files and slew to the file coordinates.
                </para>
            </listitem>
            <listitem>
                <para>
                    Auto-focus target. The autofocus process automatically selects the best star in the frame and runs the autofocus algorithm against it.
                </para>
            </listitem>
            <listitem>
                <para>
                    Perform plate solving, sync mount, and slew to target coordinates.
                </para>
            </listitem>
            <listitem>
                <para>
                    Perform post-alignment focusing since the frame might have moved during the plate solving process.
                </para>
            </listitem>
            <listitem>
                <para>
                    Perform calibration and start auto-guiding: The calibration process automatically selects the best guide star, performs calibration, and starts the autoguide process.
                </para>
            </listitem>
            <listitem>
                <para>
                    Load the sequence file in the <link linkend="ekos-capture">Capture module</link> and start the imaging process.
                </para>
            </listitem>
            <listitem>
                <para>
                    Coordinate module issues, such as failures in guiding or alignment. They may result is Scheduler job suspensions and rescheduling.
                </para>
            </listitem>
            <listitem>
                <para>
                    Note--some of the inter-module interactions are initiated by the modules themselves, but are monitored by the Scheduler. These include meridian flips, autofocus runs initiated by temperature change or timer expiration, and minimum guiding deviation requirements for capture.
                </para>
            </listitem>
        </itemizedlist>
    </sect3>

    <sect3 id="ekos-scheduler-shutdown">
        <title>Shutdown</title>
        <para>
            Once the Scheduler job is completed successfully, the scheduler selects the next Scheduler job. If no job can be scheduled at this time, the mount is parked until a next job can run. Furthermore, if the next job is not due for a user-configurable time limit, the scheduler performs a <emphasis>preemptive</emphasis> shutdown to preserve resources and performs the startup procedure again when the target is due.
        </para>
        <para>
            If an unrecoverable error occurs, the observatory initiates shutdown procedure. If there is a shutdown script, it will be executed last.
        </para>
        <para>
            The following video demonstrates an earlier version of the scheduler, but the basic principles still apply today:
        </para>
        <mediaobject>
            <videoobject>
                <videodata contentdepth="315" contentwidth="560" fileref="https://www.youtube.com/embed/v8vIXD1kois"/>
            </videoobject>
            <caption>
                <para>
                    <phrase>Ekos Scheduler</phrase>
                </para>
            </caption>
        </mediaobject>
    </sect3>

    <sect3 id="ekos-scheduler-weather-monitoring">
        <title>Weather Monitoring</title>
        <para>
            Another critical feature of any remotely operated robotic observatory is weather monitoring. For weather updates, Ekos relies on the selected INDI weather driver to continuously monitor the weather conditions. For simplicity sake, the weather conditions can be summed in three states:
        </para>
        <orderedlist>
            <listitem>
                <para>
                    <emphasis role="bold">Ok</emphasis>: Weather conditions are clear and optimal for imaging.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Warning</emphasis>: Weather conditions are not clear, seeing is subpar, or partially obstructed and not suitable for imaging. Any further imaging process is suspended until the weather improves. Warning weather status does not pose any danger to the observatory equipment so the observatory is kept operational. The exact behavior to take under Warning status can be configured.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Alert</emphasis>: Weather conditions are detrimental to the observatory safety and shutdown must be initiated as soon as possible.
                </para>
            </listitem>
        </orderedlist>
    </sect3>

    <sect3 id="ekos-scheduler-startup-and-shutdown-scripts">
        <title>Startup &amp; Shutdown Scripts</title>
        <para>
            Due to the uniqueness of each observatory, Ekos enables the user to select startup and shutdown scripts. The scripts take care of any necessary procedures that must take place on startup and shutdown stages. On startup, Ekos executes the startup scripts and only proceeds to the remainder of the startup procedure (unpark dome/unpark mount) if the script completes successfully. Conversely, the shutdown procedure begins with parking the mount &amp; dome before executing the shutdown script as the final procedure.
        </para>
        <para>
            Startup and shutdown scripts can be written any language that can be executed on the local machine. It must return 0 to report success, any other exist value is considered an error indicator. The script's standard output is also directed to Ekos logger window. The following is an sample demo startup script in Python:
        </para>
        <programlisting language="python">
#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import time
import sys

print "Turning on observatory equipment..."
sys.stdout.flush()

time.sleep(5)

print "Checking safety switches..."
sys.stdout.flush()

time.sleep(5)

print "All systems are GO"
sys.stdout.flush()

exit(0)
        </programlisting>
        <para>
            The startup and shutdown scripts must be <emphasis>executable</emphasis> in order for Ekos to invoke them (&eg; use <userinput>chmod +x startup_script.py</userinput> to mark the script as executable). Ekos Scheduler enables truly simple robotic operation without the need of any human intervention in any step of the process. Without human presence, it becomes increasingly critical to gracefully recover from failures in any stage of the observation run. Using &plasma; notifications, the user can configure audible alarms and email notifications for the various events in the Scheduler.
        </para>
    </sect3>

    <sect3 id="ekos-scheduler-mosaic-Planner">
        <title>Mosaic Planner</title>
        <screenshot>
            <screeninfo>
                Mosaic Planner
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="mosaic_planner.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Mosaic Planner</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
        <para>
            Hubble-like super wide field images of <ulink url="http://darkskyart.com/?page_id=96">galaxies</ulink> and nebulae are truly awe-inspiring, and while it takes great skills to obtain such images and process them; many notable names in the field of astrophotography employ gear that is not <emphasis>vastly</emphasis> different from yours or mine. I emphasize <emphasis>vastly</emphasis> because some do indeed have impressive equipment and dedicated observatories worth tens of the thousands of dollars. Nevertheless, many amateurs can obtain stellar wide-field images by combining smaller images into a single grand mosaic.
        </para>
        <para>
            We are often limited by our camera+telescope Field of View (FOV). By increasing FOV by means of a focal reducer or a shorter tube, we gain a larger sky coverage at the expense of spatial resolution. At the same time, many attractive wide-field targets span multiple FOVs across the sky. Without any changes to your astrophotography gear, it is possible to create a super mosaic image <emphasis>stitched</emphasis> together from several smaller images. There are two major steps to accomplish a super mosaic image:
        </para>
        <orderedlist>
            <listitem>
                <para>
                    Capture multiple images spanning the target with some overlap between images. The overlap is necessary to enable the processing software from aligning and joining the sub-images.
                </para>
            </listitem>
            <listitem>
                <para>
                    Process the images and <emphasis>stitch</emphasis> them into a super mosaic image.
                </para>
            </listitem>
        </orderedlist>
        <para>
            The 2nd step is handled by image processing applications such as <ulink url="https://pixinsight.com">PixInsight</ulink>, among others, and will not be the topic of discussion here. The first step can be accomplished in Ekos Scheduler where it creates a mosaic suitable for your equipment and in accordance with the desired field of view. Not only Ekos creates the mosaic panels for your target, but it also constructs the corresponding observatory jobs required to capture all the images. This greatly facilitates the logistics of capturing many images with different filters and calibration frames across a wide area of the sky.
        </para>
        <para>
            The <guilabel>Mosaic Planner</guilabel> in the Ekos Scheduler will create multiple Scheduler jobs based on a central target. To toggle the planner, click on the <guibutton>Mosaic Planner</guibutton> button in Ekos Scheduler or KStars INDI toolbar as illustrated in the screenshot. The planner draws the Mosaic Panel directly unto the sky map. It is recommended to enable HiPS overlay for the best experience. The planner is composed of four stages:
        </para>
        <orderedlist>
            <listitem>
                <para>
                    <emphasis role="bold">Confirm Equipment</emphasis>: Ekos attempts to load equipment settings from INDI. If unsuccessful, you need to enter your equipment settings including your telescope focal length in addition to camera's width, height, and pixel dimensions. The settings are saved for future sessions.
                </para>
            <screenshot>
            <screeninfo>
            Confirm Equipment
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="mosaic_confirm_equipment.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Confirm Equipment</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Adjust Grid</emphasis>: Select the mosaic panel dimension and overlap percentage. The Mosaic Panel is updated accordingly on the sky map. Adjust the Position Angle to match the desired mosaic orientation in the sky. If the Position Angle is different from your camera's usual orientation, you may need to rotate the camera either manually or via a mechanized rotator when the scheduler jobs are executed. Tile transparency is automatically calculated by default but may be turned off and adjusted manually. To compute the mosaic field from the number of tiles, click the <guibutton>Cover FOV</guibutton> button. The mosaic panel can be centered in the sky map by clicking on the <guibutton>Recenter</guibutton> button.
                </para>
                <screenshot>
            <screeninfo>
            Select Grid
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="mosaic_select_grid.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Select Grid</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
        <para>
            A large overlap will make frame stitching easier during post-processing, but it requires more panes to cover the desired extent. However, if you already know the minimal amount of sub-frames your rejection algorithm will use during post-processing, you may want to increase the overlap to attain that amount on the areas covered by multiple panes. For instance, a 4x4 mosaic grid with 75% overlap has 16 sub-frames covering the central intersection, which is enough for Winsorized Sigma rejection. Although the resulting stack does not have the same height on all parts of the final frame, this method gives you control on signal-to-noise ratio and allows you to provide context to your target while exposing a relatively low number of captures.
        </para>
        <para>
            The large number drawn in the corner of each grid pane represents the order in which panes will be captured. The default S-shaped choice (west-east then alternating high-low/low-high moves), ensures minimal movement of the mount during observation. Uncheck <guilabel>Minimum mount move</guilabel> to revert to west-east/high-low movement only. The coordinates of each pane are rendered in their center as degrees, minutes and seconds. Finally, the angle each pane rotates from the center of the mosaic is displayed at the bottom. If your field of view is large, or if your mosaic is located close to a celestial pole, you may observe that rendered panes start rotating visibly due their horizontal position or high declination. Use the <guilabel>overlap</guilabel> to ensure panes cover the desired frame extents properly.
        </para>
        <screenshot>
            <screeninfo>
                Scheduler Mosaic Tool - Large rotation
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="mosaic_close_pole.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Scheduler Mosaic Tool - Large rotation</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Adjust Grid</emphasis>: Adjust Grid center by manually entering the J2000 center or by dragging the center of the mosaic on the sky map.
                </para>
            <screenshot>
            <screeninfo>
            Adjust Grid
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="mosaic_adjust_grid.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Adjust Grid</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Create Jobs</emphasis>: The final step is to select the sequence file and directory to store the images. Target field may be automatically filled but may be changed as desired. Select the steps each scheduler job should execute in sequence (Track -> Focus -> Align -> Guide -> Capture), and adjust the frequency of automatic alignment and focus routines that must be executed during the mosaic operation. For example, if <guilabel>Align Every</guilabel> is set to 2 Scheduler Jobs, then the first job will run the astrometry alignment, while the second job will skip it. When the third job is executed, alignment is performed again and so forth.
                </para>
                <para>
                  If you want the different mosaic tile jobs to alternate, then fill in the group name with an identifier that all the tile jobs will share, and select a repeating completion condition.
                </para>
            <screenshot>
            <screeninfo>
            Create Jobs
            </screeninfo>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="mosaic_create_jobs.png" format="PNG"/>
                </imageobject>
                <textobject>
                    <phrase>Create Jobs</phrase>
                </textobject>
            </mediaobject>
        </screenshot>
            </listitem>
        </orderedlist>                
        <para>
            Click <guibutton>Create Jobs</guibutton> to generate mosaic scheduler jobs and add them to the schedule queue. You can further edit the jobs individually, as you would normal Scheduler jobs.
        </para>
    </sect3>
</sect2>
